// <auto-generated />
using System;
using LikeBotVK.Infrastructure.ApplicationData.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LikeBotVK.Infrastructure.ApplicationData.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220408214307_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LikeBotVK.Infrastructure.ApplicationData.Models.JobData", b =>
                {
                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("BackgroundJobId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateTimeLimitation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Hashtag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WorkType")
                        .HasColumnType("int");

                    b.HasKey("JobId");

                    b.ToTable("JobsData");
                });

            modelBuilder.Entity("LikeBotVK.Infrastructure.ApplicationData.Models.PaymentData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PaymentsData");
                });

            modelBuilder.Entity("LikeBotVK.Infrastructure.ApplicationData.Models.SubscribeData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("EndSubscribe")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserDataUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserDataUserId");

                    b.ToTable("SubscribesData");
                });

            modelBuilder.Entity("LikeBotVK.Infrastructure.ApplicationData.Models.UserData", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("BonusAccount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CurrentJobsId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CurrentVkId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBanned")
                        .HasColumnType("bit");

                    b.Property<long?>("ReferralId")
                        .HasColumnType("bigint");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("UsersData");
                });

            modelBuilder.Entity("LikeBotVK.Infrastructure.ApplicationData.Models.SubscribeData", b =>
                {
                    b.HasOne("LikeBotVK.Infrastructure.ApplicationData.Models.UserData", "UserData")
                        .WithMany("Subscribes")
                        .HasForeignKey("UserDataUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserData");
                });

            modelBuilder.Entity("LikeBotVK.Infrastructure.ApplicationData.Models.UserData", b =>
                {
                    b.Navigation("Subscribes");
                });
#pragma warning restore 612, 618
        }
    }
}
