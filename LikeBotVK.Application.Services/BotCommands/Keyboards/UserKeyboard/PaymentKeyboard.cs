using LikeBotVK.Application.Abstractions.DTO;
using Telegram.Bot.Types.ReplyMarkups;

namespace LikeBotVK.Application.Services.BotCommands.Keyboards.UserKeyboard;

public static class PaymentKeyboard
{
    public static readonly InlineKeyboardMarkup Subscribes =
        new(new List<IEnumerable<InlineKeyboardButton>>
        {
            new List<InlineKeyboardButton>
                {InlineKeyboardButton.WithCallbackData("‚ûï –û–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", "buySubscribe")},
            new List<InlineKeyboardButton>
                {InlineKeyboardButton.WithCallbackData("üíµ –ú–æ–∏ –ø–ª–∞—Ç–µ–∂–∏", "paymentsHistory_1")},
            new List<InlineKeyboardButton> {InlineKeyboardButton.WithCallbackData("üïß –ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏", "mySubscribes_1")}
        });

    public static InlineKeyboardMarkup ActivePayments(int page) =>
        new(new List<InlineKeyboardButton>
        {
            InlineKeyboardButton.WithCallbackData("‚¨Ö", $"paymentsHistory_{page - 1}"),
            InlineKeyboardButton.WithCallbackData("‚û°", $"paymentsHistory_{page + 1}")
        });

    public static readonly InlineKeyboardMarkup PaySubscribe =
        new(InlineKeyboardButton.WithCallbackData("‚ûï –û–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", "buySubscribe"));

    public static InlineKeyboardMarkup ActiveSubscribes(int page) =>
        new(new List<InlineKeyboardButton>
        {
            InlineKeyboardButton.WithCallbackData("‚¨Ö", $"mySubscribes_{page - 1}"),
            InlineKeyboardButton.WithCallbackData("‚û°", $"mySubscribes_{page + 1}")
        });

    public static InlineKeyboardMarkup CheckBill(PaymentData payment, int count) =>
        new(new List<List<InlineKeyboardButton>>
        {
            new() {InlineKeyboardButton.WithUrl("–û–ø–ª–∞—Ç–∏—Ç—å", payment.PayUrl)},
            new() {InlineKeyboardButton.WithCallbackData("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É", $"bill_{count}_{payment.BillId}")},
        });
}